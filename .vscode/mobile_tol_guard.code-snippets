{
	// Place your workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"translator": {
		"scope": "dart",
		"prefix": "tr",
		"body": [
			"translator.$1",
		],
		"description": "Translator"
	},
	"verticalSpacing": {
		"scope": "dart",
		"prefix": "ver",
		"body": [
			"verticalSpacing($1),",
		],
		"description": "Vertical Spacing"
	},
	"horizontalSpacing": {
		"scope": "dart",
		"prefix": "hor",
		"body": [
			"horizontalSpacing($1),",
		],
		"description": "Horizontal Spacing"
	},
	"AppTheme": {
		"scope": "dart",
		"prefix": "app",
		"body": [
			"AppTheme.$1,",
		],
		"description": "AppTheme"
	},
	"AppTheme.title()": {
		"scope": "dart",
		"prefix": "apptitle",
		"body": [
			"AppTheme.title(),",
		],
		"description": "AppTheme.title()"
	},
	"AppTheme.subtitle1()": {
		"scope": "dart",
		"prefix": "apps1",
		"body": [
			"AppTheme.subtitle1(),",
		],
		"description": "AppTheme.subtitle1()"
	},
	"AppTheme.subtitle2()": {
		"scope": "dart",
		"prefix": "apps2",
		"body": [
			"AppTheme.subtitle2(),",
		],
		"description": "AppTheme.subtitle2()"
	},
	"AppTheme.subtitle3()": {
		"scope": "dart",
		"prefix": "apps2",
		"body": [
			"AppTheme.subtitle3(),",
		],
		"description": "AppTheme.subtitle3()"
	},
	"AppTheme.body1()": {
		"scope": "dart",
		"prefix": "appb1",
		"body": [
			"AppTheme.body1(),",
		],
		"description": "AppTheme.body1()"
	},
	"AppTheme.body2()": {
		"scope": "dart",
		"prefix": "appb1",
		"body": [
			"AppTheme.body2(),",
		],
		"description": "AppTheme.body2()"
	},
	"AppTheme.body3()": {
		"scope": "dart",
		"prefix": "appb3",
		"body": [
			"AppTheme.body3(),",
		],
		"description": "AppTheme.body3()"
	},
	"AppTheme.custom()": {
		"scope": "dart",
		"prefix": "appc",
		"body": [
			"AppTheme.custom(),",
		],
		"description": "AppTheme.custom()"
	},
	"AppTheme.black10": {
		"scope": "dart",
		"prefix": "black",
		"body": [
			"AppTheme.black,",
		],
		"description": "AppTheme.black"
	},
	"AppTheme.white": {
		"scope": "dart",
		"prefix": "white",
		"body": [
			"AppTheme.white,",
		],
		"description": "AppTheme.white"
	},
	"EdgeInsets.all()": {
		"scope": "dart",
		"prefix": "edall",
		"body": [
			"const EdgeInsets.all($1),",
		],
		"description": "dgeInsets.all()"
	},
	"EdgeInsets.symmetric()": {
		"scope": "dart",
		"prefix": "edsy",
		"body": [
			"const EdgeInsets.symmetric($1),",
		],
		"description": "dgeInsets.symmetric()"
	},
	"EdgeInsets.only()": {
		"scope": "dart",
		"prefix": "edonly",
		"body": [
			"const EdgeInsets.only($1),",
		],
		"description": "dgeInsets.only()"
	},
	"getIt<>()": {
		"scope": "dart",
		"prefix": "gt",
		"body": [
			"getIt<$1>()",
		],
		"description": "getIt<>()"
	},
	"toJson": {
		"scope": "dart",
		"prefix": "tojson",
		"body": [
			"Future<Map<String, dynamic>> toJson() async=> {",
			"};",
		],
		"description": "toJson"
	},
}